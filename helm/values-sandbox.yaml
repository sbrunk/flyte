
#
# FLYTEADMIN
#

flyteadmin: {} # use default config

#
# DATACATALOG
#

datacatalog: {}

#
# FLYTEPROPELLER
#

flytepropeller: {}

#
# FLYTECONSOLE
#

flyteconsole: {}

#
# REDIS
#

redis:
  enabled: false

#
# POSTGRES
#

postgres:
  image:
    # Override postgres image to use alpine based (rather smaller) docker image
    tag: "10.16-alpine"

#
# MINIO
#

minio: {}

#
# CONTOUR
#

contour:
  contour: {}
  envoy:
    service:
      type: NodePort
      ports:
        http: 80
      nodePorts:
        http: 30081

#
# SPARKOPERATOR
#

sparkoperator:
  enabled: false

#
# PYTORCHOPERATOR
#

pytorchoperator:
  enabled: false

#
# COMMON
#

common:
  databaseSecret: {}
  ingress: {}
  flyteNamespaceTemplate: {}

#
# CONFIGMAPS
#

configmap:

  db:
    database:
      port: 5432
      username: postgres
      host: postgres
      dbname: flyte_development

  storage:
    storage:
      type: minio
      container: my-s3-bucket
      connection:
        access-key: minio
        auth-type: accesskey
        secret-key: miniostorage
        disable-ssl: true
        endpoint: http://minio.flyte.svc.cluster.local:9000
        region: us-east-1

  # Task default resources configuration
  task_resource_defaults:
    task_resources:
      defaults:
        memory: 200Mi

  enabled_plugins:
    tasks:
      task-plugins:
        enabled-plugins:
          - container
          - sidecar
          - k8s-array
        default-for-task-types:
          container: container
          sidecar: sidecar
          container_array: k8s-array

  k8s:
    plugins:
      k8s:
        default-env-vars:
        - FLYTE_AWS_ENDPOINT: "http://minio.flyte:9000"
        - FLYTE_AWS_ACCESS_KEY_ID: minio
        - FLYTE_AWS_SECRET_ACCESS_KEY: miniostorage
        default-memory: 200Mi
  
  task_logs:
    plugins:
      logs:
        kubernetes-enabled: true
        kubernetes-url: http://localhost:30082

  logger:
    logger:
      show-source: true
      level: 5

  # Disable Qubole
  qubole: null

  # Use noop resource-manager
  resource_manager:
    propeller:
      resourcemanager:
        type: noop
        redis: null

  ab_project_resource_quota: |
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      name: project-quota
      namespace: {{ namespace }} 
    spec:
      hard:
        limits.cpu: {{ projectQuotaCpu }} 
        limits.memory: {{ projectQuotaMemory }}

  ac_project_copilot_dataconfig: |
    kind: ConfigMap
    apiVersion: v1
    metadata:
      name: flyte-data-config
      namespace: {{ namespace }}
    data:
      config.yaml: |
        storage:
          connection:
            access-key: minio
            auth-type: accesskey
            disable-ssl: true
            endpoint: http://minio.flyte.svc.cluster.local:9000
            region: us-east-1
            secret-key: miniostorage
          type: minio
          container: my-s3-bucket
          enable-multicontainer: true
